function gamePanelUI(panel)
    close all

    % create figure
    gameFigure=figure('Name','Word Tower!','Toolbar','none','Menubar','none',...
        'NumberTitle','off');

    % ,'CloseRequestFcn',@my_closereq);
    % to make the gui close with "are you sure" dialog box
    % set(gcf,'CloseRequestFcn',@my_closereq);
    % set(0,'DefaultFigureCloseRequestFcn',@my_closereq)

    % % get screen resolution
    % set(0,'units','pixels') % note: set(0,'units','normalized') might be
    % easier
    % Pix_SS = get(0,'screensize');
    % set(0,'units','inches')
    % Inch_SS = get(0,'screensize');
    % Res = Pix_SS./Inch_SS;

    % make figure not resizeable
    set(gameFigure,'Resize','off')

    fpos=get(gameFigure,'Position');
    set(gameFigure,'Position',[fpos(1:2)-100, 900, 500]);

    % uc colors
    yblue = [15/255 77/255 146/255];
    cgold = [255/255 210/255 48/255];

    % create panels
    panel.boardPanel1 = uipanel('Parent',gameFigure,...
        'BackgroundColor', yblue,'Position',[0,0,1/3,4/5]);
    panel.boardPanel2 = uipanel('Parent',gameFigure,...
        'BackgroundColor', cgold,'Position',[1/3,0,1/3,4/5]);
    panel.boardPanel3 = uipanel('Parent',gameFigure,...
        'BackgroundColor', yblue,'Position',[2/3,0,1/3,4/5]);
    topPanel = uipanel('Parent',gameFigure,'Position',[0,4/5,1,1/5]);

    % Formations in top-down order

    % topPanel formation
    titleText = uicontrol(topPanel,'Style','text',...
        'String','WORD TOWER','FontSize',45,'FontWeight','normal',...
        'FontName','Arial Rounded MT Bold','Units','normalized',...
        'Position',[0 0 1 1],'BackgroundColor', yblue);

    % panel.boardPanel1 formation
    panel.scorePanel = uicontrol(panel.boardPanel1,'Style',...
        'text', 'String',['SCORE: ' num2str(0)], 'FontSize',24,...
        'FontWeight','bold','FontName', 'Arial Rounded MT Bold',...
        'Units', 'normalized','BackgroundColor', yblue,...
        'Position', [.05, .68, .9, .15]);

    towerLabel = uicontrol(panel.boardPanel1,'Style',...
        'text', 'String','Word Tower', 'FontSize',14,...
        'FontWeight','normal','FontName','Arial Rounded MT Bold',...
        'Units', 'normalized','BackgroundColor', yblue,...
        'Position', [.1, .6, .4, .1]);

    align([panel.scorePanel, towerLabel],'Center','None');

    % panel.boardPanel2 formation
    wBarText=uicontrol(panel.boardPanel2,'Style',...
        'text','FontName', 'Arial Rounded MT Bold',...
        'FontSize', 12,...
        'String','Time Remaining',...
        'Units','normalized',...
        'BackgroundColor', cgold,...
        'Position',[.25, .88, .5, .05]);

    wBar = axes('Parent',panel.boardPanel2, 'XLim',[0 1], ...
        'XTick',[], 'YTick',[], 'Box','on', 'Layer','top', ...
        'Units','normalized', 'Position',[.1, .8, .8, .075]);
    panel.wBarCtrl = patch([0 0 0 0], [0 1 1 0], yblue, 'Parent',wBar, ...
        'FaceColor',yblue, 'EdgeColor','none');

    currentText = uicontrol(panel.boardPanel2,'Style',...
        'text', 'FontName', 'Arial Rounded MT Bold',...
        'String','Current Word', 'FontSize',14,...
        'Units', 'normalized',...
        'BackgroundColor', cgold,...
        'Position', [.1 .65 .8 .05]);
    panel.displayedWord = uicontrol(panel.boardPanel2,'Style',...
        'text', 'String',' ', 'BackgroundColor','white',...
        'FontName', 'Arial Rounded MT Bold',...
        'FontSize', 16,'FontWeight','demi',...
        'Units', 'normalized','Position', [.1 .52 .8 .08]);

    typeText = uicontrol(panel.boardPanel2,'Style','text',...
        'String','Type the word','Units','normalized',...
        'FontName', 'Arial Rounded MT Bold',...
        'FontSize', 12,...
        'BackgroundColor', cgold,...
        'Position',[0, .275, 1, .1]);

    align([currentText, panel.displayedWord,wBarText,...
        wBar, typeText],'Center','None');


    % callbacks for submitButton and typeEditText check if the user-typed word
    % is correct
    typeEditText = uicontrol(panel.boardPanel2, 'Style','edit', 'Max',1,'Min',1,...
        'BackgroundColor','white','Units','normalized',...
        'Position',[.1 .2 .6 .1],...
        'Interruptible','off','BusyAction','cancel',...
        'Tag', 'input','Callback',@(h,d) panel.submit_callback);


    submitButton = uicontrol(panel.boardPanel2,'Style','pushbutton',...
        'String','Submit',...
        'Units','normalized',...
        'Position',[.7,.2,.2,.1],'Interruptible','off','BusyAction','cancel',...
        'Callback',@(h,d) panel.submit_callback, 'tag', 'submit');

    % panel.boardPanel3 formation
    % adding
    panel.profilePanel = uipanel(panel.boardPanel3,'Units',...
        'normalized','Position',[0 .66 1 .34],...
        'BorderWidth',0,'BackgroundColor', yblue);
    imageAxes = axes('Parent',panel.profilePanel,'Visible','off');
    profilePicDisplayH = image(panel.currentPlayer.profileImage,'Parent',imageAxes);
    set(imageAxes,'Units','pixels',...
        'Position',[30 35 72 72],...
        'Visible','off'...
        ); %for some reason image seems to set visibility on

    %Personal best table
    panel.scoreTable = uitable('Parent', panel.profilePanel,... 
        'ColumnName',[],...
        'RowName',{'Normal','Build','Matlab','Song'},...
        'Data',panel.currentPlayer.highScores',...
        'Units','normalized',...
        'Position',[.5 0.25 .4 .55],...
        'ColumnWidth',{40 40});

    %Personal best text
    personalBest = uicontrol('Parent',panel.profilePanel,...
        'Style', 'text',...
        'String','Personal Best',...
        'Units','normalized',...
        'FontSize',12,...
        'Position', [.55,.85,.3,.1]);

    % Score History Button
    hsButton = uicontrol(panel.profilePanel,'Style','pushbutton',...
        'String','Score History',...
        'Units','normalized',...
        'Position',[0.55,0.12,.3,.12],...
        'Interruptible','off','BusyAction','cancel',...
        'Callback',@pb_callback);

    %Name text
    name = uicontrol('Parent',panel.profilePanel,...
        'Style', 'text',...
        'String',panel.currentPlayer.name,...
        'Units','normalized',...
        'FontSize',18,...
        'Position', [0.02 0.8 .4 .15]);

    % Panel to display the current highscores of the current game more. The
    % default will be the normal game mode:
    panel.highscoreLabel = uicontrol(panel.boardPanel3,'Units','normalized',...
        'Style','text',...
        'Position',[.25 .6 .45 .05]);
    set(panel.highscoreLabel,'String','High Scores - Normal');
    panel.highscorePanel = uipanel(panel.boardPanel3,'Units','normalized',...
        'Position',[.2 .32 .55 .28]);
    normalHighScoreData = Normal.getHighScores;
    panel.highscoreTable = uitable('Parent', panel.highscorePanel,...
        'ColumnName',{'Name','Score'},...
        'RowName',[],...
        'Data',normalHighScoreData,...
        'Units','normalized',...
        'Position',[0 0 1 1]);

    % Game modes button group
    gameModeGroup = uibuttongroup('Parent',panel.boardPanel3,...
        'Title','Game Mode',...
        'Units','normalized',...
        'Position',[.1,.05,.4,.25]);
    set(gameModeGroup,'SelectionChangeFcn',@showHS);

    teamButtons{1} = uicontrol(gameModeGroup,'Style','radiobutton',...
        'String','Normal',...
        'Value',0,...
        'Units','normalized',...
        'Position',[.1,.8,.8,.2]);
    teamButtons{2} = uicontrol(gameModeGroup,'Style','radiobutton',...
        'String','Build',...
        'Value',0,...
        'Units','normalized',...
        'Position',[.1,.6,.8,.2]);
    teamButtons{3} = uicontrol(gameModeGroup,'Style','radiobutton',...
        'String','MatL',...
        'Value',0,...
        'Units','normalized',...
        'Position',[.1,.4,.8,.2]);
    teamButtons{4} = uicontrol(gameModeGroup,'Style','radiobutton',...
        'String','Song',...
        'Value',0,...
        'Units','normalized',...
        'Position',[.1,.2,.8,.2]);


    % Reset Button
    resetButton = uicontrol(panel.boardPanel3,'Style','pushbutton',...
        'String','Reset',...
        'Units','normalized',...
        'Position',[.55,.12,.3,.07],...
        'Interruptible','off','BusyAction','cancel',...
        'Callback',@reset_callback);


    % Go button
    goButton = uicontrol(panel.boardPanel3,'Style','pushbutton',...
        'String','Go!',...
        'Units','normalized',...
        'Position',[.55,.21,.3,.07],...
        'BackgroundColor',[0 1 0],...
        'Callback',@go_callback,'tag','go');

    % Logout button
    logOutButton = uicontrol(panel.boardPanel3,'Style','pushbutton',...
        'String','Log Out',...
        'Units','normalized',...
        'Position',[.55,.05,.3,.07],...
        'Callback',@logout_callback);



    % --------------- CALLBACKS ---------------
    % Go button callback
    
    function go_callback(hObject,eventdata)
%         
%         delete(panel.lhEnd); delete(panel.lhTime);
        % make sure that panel.game is gone
        panel.game = [];
        % Start the game
        
        % If game is in progress, first reset game. if continueGame is
        % empty, then do not check condition

        % reset everything
        panel.game.continueGame=0;
        panel.game.towerNum=0;
        set(panel.displayedWord, 'String', ' ');
        set(panel.scorePanel,'String',['SCORE: ' '0']);
        delete(panel.tower);
        panel.tower=[];
        panel.wbTime=0;
        panel.updateTime;
        panel.wbTime=[];
        set(goButton,'String','Playing...','Enable','off')
        set(towerLabel, 'Visible','on')
        
        % reset 'Current Word' text and position and wbar text
        set(currentText,'String','Current Word',...
            'Position', [.1 .65 .8 .05],'Visible','on');
        set(w,'Style',...
            'text','FontName', 'Arial Rounded MT Bold',...
            'FontSize', 12,...
            'String','Time Remaining',...
            'Units','normalized',...
            'BackgroundColor', cgold,...
            'Position',[.25, .88, .5, .05]);
        
        
        % Read the radiobutton
        n=get(gameModeGroup,'SelectedObject');
        panel.currentGameMode=get(n,'String');
        % create gamemode text
        gameModeText = uicontrol(panel.boardPanel1,'Style',...
            'text', 'String',panel.currentGameMode, 'FontSize',12,...
            'FontWeight','bold','Units', 'normalized',...
            'Position', [.2, .9, .6, .05],'Tag','gamemode',...
            'BackgroundColor', yblue);        
 
        switch panel.currentGameMode % set game parameters based on mode
            case 'Normal'
                panel.game = Normal();
                addlistener(panel.game,'EndGame',@(h,e) endGame(panel));
                addlistener(panel.game,'OutOfTime',@(h,e) submit_callback(panel));
                panel.maxTime=2.5;
                set(panel.displayedWord,'String',panel.game.currentWord);
                panel.dec = 0.05; % determines waitbar decrement
                panel.updateScore(0);
                set(typeEditText,'String',''); % clear text input box
                panel.wbTime=panel.maxTime; % begin waitbar with max Time
                
                panel.game.continueGame=1;
                panel.game.play
                panel.runTime
            case 'MatL'
                set(towerLabel, 'Visible','off')
                panel.game = MatL();
                addlistener(panel.game,'EndGame',@(h,e) endGame(panel));
                panel.maxTime=7; % because this mode is way too hard
                panel.dec = 0.05; % determines waitbar decrement
                panel.updateScore(0);
                set(typeEditText,'String',''); % clear text input box
                panel.wbTime=panel.maxTime; % begin waitbar with max Time
                matlabCat_callback
            case 'Song'
                set(towerLabel, 'Visible','off')
                panel.game = Song();
                addlistener(panel.game,'EndGame',@(h,e) endGame(panel));
                panel.game.continueGame=1;
                panel.updateScore(0);
                panel.dec = 0.05;
                chooseSong_callback
            case 'Build'
                panel.game = Build();
                addlistener(panel.game,'EndGame',@(h,e) endGame(panel));
                panel.maxTime = 5;
                set(panel.displayedWord,'String',panel.game.currentWord);
                panel.dec = 0.05; % determines waitbar decrement
                panel.updateScore(0);
                set(typeEditText,'String',''); % clear text input box
                panel.wbTime=panel.maxTime; % begin waitbar with max Time
                
                panel.game.continueGame=1;
                addlistener(panel,'TopOfTower',@(h,d) panel.maxTower);
                
                panel.game.play
                panel.runTime
        end
        
        % add code to do 3-2-1! prompt
    end







%Submit button Callback is now a method of GamePanel. Stored in satellite
%file

% These callback controls the displaying of the highscores for each
% game mode. When the user clicks on the radiobutton, the gamepanel
% will display the top scores.
    function showHS(h,e)
        n=get(gameModeGroup,'SelectedObject');
        selectedRadioButton =get(n,'String');
        switch selectedRadioButton
            case 'Normal'
                normalHSD = Normal.getHighScores;
                set(panel.highscoreTable,'Data',[]);
                set(panel.highscoreLabel,'String','High Scores - Normal');
                set(panel.highscoreTable,'Data',normalHSD);
            case 'Build'
                buildHSD = Build.getHighScores;
                set(panel.highscoreLabel,'String','High Scores - Build');
                set(panel.highscoreTable,'Data',buildHSD);
            case 'MatL'
                matHSD = MatL.getHighScores;
                set(panel.highscoreLabel,'String','High Scores - Matlab');
                set(panel.highscoreTable,'Data',matHSD);
            case 'Song'
                songHSD = Song.getHighScores;
                set(panel.highscoreLabel,'String','High Scores - Song');
                set(panel.highscoreTable,'Data',songHSD);
        end
    end

% Choose Matlab Function Category
    function matlabCat_callback(h,e)
        chooseFigure = figure;
        fpos = get(chooseFigure,'Position');
        set(chooseFigure,'Units','pixels',...
            'Position',[fpos(1:2),300,500],...
            'NumberTitle','off',...
            'Name','Choose your song!',...
            'MenuBar','none',...
            'DockControls','off',...
            'Resize','off',...
            'WindowStyle','modal')
        
        % make the RedXClose close via default manner
        set(chooseFigure,'CloseRequestFcn',@closeChooseFigure);
        
        % Radio button group with list of songs
        chooseCatGroup = uibuttongroup('Parent',chooseFigure,...
            'Title', 'MATLAB Function Categories',...
            'Units','normalized',...
            'Position',[0,.36,1,.5]);
        teamButtons{1} = uicontrol(chooseCatGroup,'Style','radiobutton',...
            'String','Object-Oriented Programming',...
            'Value',0,...
            'Units','normalized',...
            'Position',[.1,.8,.8,.2]);
        teamButtons{2} = uicontrol(chooseCatGroup,'Style','radiobutton',...
            'String','GUI Development',...
            'Value',0,...
            'Units','normalized',...
            'Position',[.1,.6,.8,.2]);
        teamButtons{3} = uicontrol(chooseCatGroup,'Style','radiobutton',...
            'String','Mathematics',...
            'Value',0,...
            'Units','normalized',...
            'Position',[.1,.4,.8,.2]);
        teamButtons{4} = uicontrol(chooseCatGroup,'Style','radiobutton',...
            'String','Desktop Tools and Development Environment',...
            'Value',0,...
            'Units','normalized',...
            'Position',[.1,.2,.8,.2]);
        
        % Choose button for chooseFigure (once song selected)
        chooseCat = uicontrol('Parent', chooseFigure,...
            'Style', 'pushbutton',...
            'Units','normalized',...
            'Position', [.12 .05 .3 .22],...
            'String','Choose Category',...
            'Callback', @chooseFunctionCat);
        
        % Cancel button
        cancel = uicontrol('Parent', chooseFigure,...
            'Style', 'pushbutton',...
            'Units','normalized',...
            'Position', [.48 .05 .3 .22],...
            'String','Cancel',...
            'Callback', @closeChooseFigure);
        
        function chooseFunctionCat(h,e)
            
            % Read the radiobutton
            n=get(chooseCatGroup,'SelectedObject');
            currentCat=get(n,'String');
            
            set(currentText, 'String',currentCat,...
                'Position', [0, .9, 1, .1],...,
                'FontName', 'Arial Rounded MT Bold',...
                'FontSize',14);
            
            panel.game.functionCategory = currentCat;
            
            
            % close the figure
            close
            
            panel.game.continueGame=1;
            
            panel.game.play
            set(currentText,'Visible','off')
            set(panel.displayedWord,'String',panel.game.currentPrompt,...
                'Position', [.1, .6, .8, .125]);
            panel.runTime
        end
        
        function closeChooseFigure(h,e) % closes current figure
            delete(chooseFigure)
        end
    end

% Choose Song callback
    function chooseSong_callback(h,e)
        
        chooseFigure = figure;
        fpos = get(chooseFigure,'Position');
        set(chooseFigure,'Units','pixels',...
            'Position',[fpos(1:2),300,500],...
            'NumberTitle','off',...
            'Name','Choose your song!',...
            'MenuBar','none',...
            'DockControls','off',...
            'Resize','off',...
            'WindowStyle','modal')
        
        % make the RedXClose close via default manner
        set(chooseFigure,'CloseRequestFcn',@closeChooseFigure);
        
        
        % Radio button group with list of songs
        chooseSongGroup = uibuttongroup('Parent',chooseFigure,...
            'Title', 'Songs',...
            'Units','normalized',...
            'Position',[0,.36,1,.5]);
        teamButtons{1} = uicontrol(chooseSongGroup,'Style','radiobutton',...
            'String','Bruno Mars - When I Was Your Man',...
            'Value',0,...
            'Units','normalized',...
            'Position',[.1,5/6,.8,.2]);
        teamButtons{2} = uicontrol(chooseSongGroup,'Style','radiobutton',...
            'String','Imagine Dragons - Its Time',...
            'Value',0,...
            'Units','normalized',...
            'Position',[.1,4/6,.8,.2]);
        teamButtons{3} = uicontrol(chooseSongGroup,'Style','radiobutton',...
            'String','Gotye - Somebody That I Used To Know',...
            'Value',0,...
            'Units','normalized',...
            'Position',[.1,3/6,.8,.2]);
        teamButtons{4} = uicontrol(chooseSongGroup,'Style','radiobutton',...
            'String','Pink - Just Give Me A Reason',...
            'Value',0,...
            'Units','normalized',...
            'Position',[.1,2/6,.8,.2]);
        teamButtons{5} = uicontrol(chooseSongGroup,'Style','radiobutton',...
            'String','Fun - Some Nights',...
            'Value',0,...
            'Units','normalized',...
            'Position',[.1,1/6,.8,.2]);
        teamButtons{6} = uicontrol(chooseSongGroup,'Style','radiobutton',...
            'String','Louis Armstrong - What A Wonderful World',...
            'Value',0,...
            'Units','normalized',...
            'Position',[.1,0,.8,.2]);
        
        
        
        % Choose button for chooseFigure (once song selected)
        chooseSong = uicontrol('Parent', chooseFigure,...
            'Style', 'pushbutton',...
            'Units','normalized',...
            'Position', [.12 .05 .3 .1],...
            'String','Choose Song',...
            'Callback', @loadSong);
        % Cancel button
        cancel = uicontrol('Parent', chooseFigure,...
            'Style', 'pushbutton',...
            'Units','normalized',...
            'Position', [.48 .05 .3 .1],...
            'String','Cancel',...
            'Callback', @ closeChooseFigure);
        % check box
        chipmunkCheck = uicontrol('Parent', chooseFigure,...
            'Style', 'checkbox',...
            'Units','normalized',...
            'Position', [.12 .25 .5 .1],...
            'String','Chipmunk Mode',...
            'Callback', @ chipmunk);
        
        function chipmunk(h,e)
            if get(chipmunkCheck,'Value')==1
                panel.game.chipmunkMode=1;
            else
                panel.game.chipmunkMode=0;
            end
        end
        
        function loadSong(h,e)
            % Read the radiobutton
            n=get(chooseSongGroup,'SelectedObject');
            currentSong=get(n,'String');
                        
            % display current song
            set(wBarText, 'String', currentSong,...
                'FontSize', 14, ...
                'Position',[.1, .8825, .8, .1]);
            
            % change 'current word' to 'lyrics'
            set(currentText, 'String', 'Lyrics',...
                'FontSize', 13);
            
            % Call 'Song' mode with currentSong as input
            [songLength, songLyrics]=loadCurrentSong(panel.game,currentSong);
            
            % set the time on waitbar to be the length of the song.
            panel.maxTime = songLength;
            
            % Display current song on gamepanel
            set(panel.displayedWord,'String',panel.game.currentLyrics,...
                'FontSize', 10, 'Position', [.1 .52 .8 .08]);
            
            panel.wbTime=panel.maxTime;
            
            
            % close the figure
            close
            play(panel.game)
            panel.runTime
        end
        
        function closeChooseFigure(h,e) % closes current figure
            delete(chooseFigure)
            set(goButton,'String','Go!','Enable','on')
            
        end
        
    end

% Reset button callback
    function reset_callback(hObject,eventdata)
        % reset all. also end game if pressed during play
        panel.game.continueGame=0;
        panel.game.towerNum=0;
        set(panel.displayedWord, 'String', ' ');
        set(panel.scorePanel,'String',['SCORE: ' '0']);
        if ~isempty(panel.tower)
            delete(panel.tower);
        end
        panel.tower=[];
        panel.wbTime=0;
        panel.updateTime;
        panel.reset = 1;
        
        gmText=findobj('tag','gamemode');
        delete(gmText);
        
        % reset 'Current Word' text and position and wbar text
        set(currentText,'String','Current Word',...
            'Position', [.1 .65 .8 .05],'Visible','on');
        wBarText=uicontrol(panel.boardPanel2,'Style',...
            'text','FontName', 'Arial Rounded MT Bold',...
            'FontSize', 12,...
            'String','Time Remaining',...
            'Units','normalized',...
            'BackgroundColor', cgold,...
            'Position',[.25, .88, .5, .05]);
        
        
        if strcmp(panel.currentGameMode,'Song')
            panel.game.songPlayer=[];
        end
    end

%Log Out callback
    function logout_callback(hObject,eventdata)
        close all
        clear all
        GamePanel.loginScreen
    end

%High Scores callback
    function pb_callback(hObject, eventdata)
        pbPlotFig=figure('Name','High Scores',...
            'Toolbar','none',...
            'Menubar','none',...
            'NumberTitle','off');
        % create 2x2 subplots of high score history in various game modes
        plot1 = subplot(2,2,1);
        p1 = plot([panel.currentPlayer.scores_unsorted{1}{:}]);
        title('Normal');
        
        plot2 = subplot(2,2,2);
        p2 = plot([panel.currentPlayer.scores_unsorted{2}{:}]);
        title('Build') 
        
        plot3 = subplot(2,2,3);
        p3 = plot([panel.currentPlayer.scores_unsorted{3}{:}]);
        title('MatL')
        
        plot4 = subplot(2,2,4);
        p4 = plot([panel.currentPlayer.scores_unsorted{4}{:}]);
        title('Song')
        
    end

end